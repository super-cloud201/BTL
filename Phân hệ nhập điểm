#include <iostream>
#include <string>

using namespace std;

// Định nghĩa cấu trúc cho sinh viên 
struct SinhVien {
    string id;       // Mã số sinh viên 
    string ten;      // Tên sinh viên
    float diemH10;   // Điểm của sinh viên (Hệ 10) 
    float diemH4;    // Điểm của sinh viên (Hệ 4) 
    string diemChu;  // Điểm của sinh viên (Hệ chữ) 
    SinhVien* prev;  // Con trỏ chỉ đến sinh viên trước đó trong danh sách liên kết kép 
    SinhVien* next;  // Con trỏ chỉ đến sinh viên tiếp theo trong danh sách liên kết kép
};

// Các hàm thao tác 
void themSinhVien(SinhVien* &head);
void suaThongTinSinhVien(SinhVien* head, string id);
void xoaSinhVien(SinhVien* &head, string id);
void timKiemSinhVien(SinhVien* head, string id);
void sapXepTheoMaSV(SinhVien* &head);
void sapXepTheoTen(SinhVien* &head);
void sapXepTheoDiem(SinhVien* &head);
void tinhDiemTrungBinh(SinhVien* head, float &diemTBH10, float &gpaTB, string &diemChuTB);
void inDanhSach(SinhVien* head);

int main() {
    SinhVien* head = NULL; // khởi tạo danh sách liên kết kép

    char luaChon;
    do {
        cout << "1. Them sinh vien moi\n";
        cout << "2. Sua thong tin sinh vien\n";
        cout << "3. Xoa sinh vien\n";
        cout << "4. Tim kiem sinh vien\n";
        cout << "5. Sap xep theo ma sinh vien\n";
        cout << "6. Sap xep theo ten\n";
        cout << "7. Sap xep theo diem\n";
        cout << "8. Tinh diem trung binh\n";
        cout << "9. In danh sach sinh vien\n";
        cout << "0. Thoat\n";
        cout << "Nhap lua chon cua ban: ";
        cin >> luaChon;

        switch (luaChon) {
            case '1':
                themSinhVien(head);
                break;
            case '2': {
                string id;
                cout << "Nhap ma so sinh vien can sua: ";
                cin >> id;
                suaThongTinSinhVien(head, id);
                break;
            }
            case '3': {
                string id;
                cout << "Nhap ma so sinh vien can xoa: ";
                cin >> id;
                xoaSinhVien(head, id);
                break;
            }
            case '4': {
                string id;
                cout << "Nhap ma so sinh vien can tim kiem: ";
                cin >> id;
                timKiemSinhVien(head, id);
                break;
            }
            case '5':
                sapXepTheoMaSV(head);
                break;
            case '6':
                sapXepTheoTen(head);
                break;
            case '7':
                sapXepTheoDiem(head);
                break;
            case '8': {
                float diemTBH10, gpaTB;
                string diemChuTB;
                tinhDiemTrungBinh(head, diemTBH10, gpaTB, diemChuTB);
                cout << "Diem trung binh cua tat ca cac sinh vien: " << diemTBH10 << " (GPA: " << gpaTB << "; diem he Chu: " << diemChuTB << ")" << endl;
                break;
            }
            case '9':
                inDanhSach(head);
                break;
            case '0':
                cout << "Chuong trinh ket thuc.\n";
                break;
            default:
                cout << "Lua chon khong hop ly, vui long thu lai.\n";
        }
    } while (luaChon != '0');

    // Giải phóng bộ nhớ của danh sách liên kết trước khi kết thúc chương trình 
    SinhVien* hienTai = head;
    while (hienTai != NULL) {
        SinhVien* temp = hienTai;
        hienTai = hienTai->next;
        delete temp;
    }

    return 0;
}

// Hàm thêm sinh viên mới vào danh sách liên kết kép 
void themSinhVien(SinhVien* &head) {
    SinhVien* sinhVienMoi = new SinhVien;
    cout << "Nhap ma so sinh vien: ";
    cin >> sinhVienMoi->id;
    cout << "Nhap ten sinh vien: ";
    cin.ignore();
    getline(cin, sinhVienMoi->ten);
    cout << "Nhap diem sinh vien (he 10): ";
    cin >> sinhVienMoi->diemH10;

    // Chuyển điểm hệ 10 sang điểm hệ 4 và điểm hệ chữ
    if (sinhVienMoi->diemH10 < 4.0) {
        sinhVienMoi->diemH4 = 0;
        sinhVienMoi->diemChu = "F";
    } else if (sinhVienMoi->diemH10 >= 4.0 && sinhVienMoi->diemH10 < 5.0) {
        sinhVienMoi->diemH4 = 1.0;
        sinhVienMoi->diemChu = "D";
    } else if (sinhVienMoi->diemH10 >= 5.0 && sinhVienMoi->diemH10 < 5.5) {
        sinhVienMoi->diemH4 = 1.5;
        sinhVienMoi->diemChu = "D+";
    } else if (sinhVienMoi->diemH10 >= 5.5 && sinhVienMoi->diemH10 < 6.5) {
        sinhVienMoi->diemH4 = 2.0;
        sinhVienMoi->diemChu = "C";
    } else if (sinhVienMoi->diemH10 >= 6.5 && sinhVienMoi->diemH10 < 7.0) {
        sinhVienMoi->diemH4 = 2.5;
        sinhVienMoi->diemChu = "C+";
    } else if (sinhVienMoi->diemH10 >= 7.0 && sinhVienMoi->diemH10 < 8.0) {
        sinhVienMoi->diemH4 = 3.0;
        sinhVienMoi->diemChu = "B";
    } else if (sinhVienMoi->diemH10 >= 8.0 && sinhVienMoi->diemH10 < 8.5) {
        sinhVienMoi->diemH4 = 3.5;
        sinhVienMoi->diemChu = "B+";
    } else if (sinhVienMoi->diemH10 >= 8.5 && sinhVienMoi->diemH10 <= 10) {
        sinhVienMoi->diemH4 = 4.0;
        sinhVienMoi->diemChu = "A";
    } else {
        cout << "Diem nhap khong hop le, moi nhap lai.\n";
        delete sinhVienMoi;
        return;
    }

    sinhVienMoi->prev = NULL;
    sinhVienMoi->next = head;
    if (head != NULL) {
        head->prev = sinhVienMoi;
    }
    head = sinhVienMoi;
    cout << "Them sinh vien thanh cong.\n";
}

// Hàm sửa thông tin của 1 sinh viên
void suaThongTinSinhVien(SinhVien* head, string id) {
    SinhVien* hienTai = head;
    while (hienTai != NULL) {
        if (hienTai->id == id) {
            cout << "Nhap diem moi cho sinh vien (he 10): ";
            cin >> hienTai->diemH10;

            // Chuyển điểm hệ 10 sang điểm hệ 4 và điểm hệ chữ
            if (hienTai->diemH10 < 4.0) {
                hienTai->diemH4 = 0.0;
                hienTai->diemChu = "F";
            } else if (hienTai->diemH10 >= 4.0 && hienTai->diemH10 < 5.0) {
                hienTai->diemH4 = 1.0;
                hienTai->diemChu = "D";
            } else if (hienTai->diemH10 >= 5.0 && hienTai->diemH10 < 5.5) {
                hienTai->diemH4 = 1.5;
                hienTai->diemChu = "D+";
            } else if (hienTai->diemH10 >= 5.5 && hienTai->diemH10 < 6.5) {
                hienTai->diemH4 = 2.0;
                hienTai->diemChu = "C";
            } else if (hienTai->diemH10 >= 6.5 && hienTai->diemH10 < 7.0) {
                hienTai->diemH4 = 2.5;
                hienTai->diemChu = "C+";
            } else if (hienTai->diemH10 >= 7.0 && hienTai->diemH10 < 8.0) {
                hienTai->diemH4 = 3.0;
                hienTai->diemChu = "B";
            } else if (hienTai->diemH10 >= 8.0 && hienTai->diemH10 < 8.5) {
                hienTai->diemH4 = 3.5;
                hienTai->diemChu = "B+";
            } else if (hienTai->diemH10 >= 8.5 && hienTai->diemH10 <= 10.0) {
                hienTai->diemH4 = 4.0;
                hienTai->diemChu = "A";
            } else {
                cout << "Diem nhap khong hop le, vui long thu lai.\n";
                return;
            }

            cout << "Sua thong tin sinh vien thanh cong.\n";
            return;
        }
        hienTai = hienTai->next;
    }
    cout << "Khong tim thay sinh vien voi ma so " << id << ".\n";
}

// Hàm xóa sinh viên ra khỏi danh sách liên kết kép
void xoaSinhVien(SinhVien* &head, string id) {
    SinhVien* hienTai = head;
    while (hienTai != NULL) {
        if (hienTai->id == id) {
            if (hienTai->prev != NULL) {
                hienTai->prev->next = hienTai->next;
            } else {
                head = hienTai->next;
            }
            if (hienTai->next != NULL) {
                hienTai->next->prev = hienTai->prev;
            }
            delete hienTai;
            cout << "Xoa sinh vien thanh cong.\n";
            return;
        }
        hienTai = hienTai->next;
    }
    cout << "Khong tim thay sinh vien voi ma so " << id << ".\n";
}

// Hàm tìm kiếm sinh viên theo mã số sinh viên
void timKiemSinhVien(SinhVien* head, string id) {
    SinhVien* hienTai = head;
    while (hienTai != NULL) {
        if (hienTai->id == id) {
            cout << "Thong tin sinh vien:\n";
            cout << "Ma so sinh vien: " << hienTai->id << endl;
            cout << "Ten sinh vien: " << hienTai->ten << endl;
            cout << "Diem sinh vien (he 10): " << hienTai->diemH10 << endl;
            cout << "Diem sinh vien (he 4): " << hienTai->diemH4 << endl;
            cout << "Diem sinh vien (he chu): " << hienTai->diemChu << endl;
            return;
        }
        hienTai = hienTai->next;
    }
    cout << "Khong tim thay sinh vien voi ma so " << id << ".\n";
}

// Hàm sắp xếp danh sách sinh viên theo mã số sinh viên
void sapXepTheoMaSV(SinhVien* &head) {
    if (head == NULL) {
        return;
    }

    bool swapped;
    SinhVien* ptr1;
    SinhVien* lptr = NULL;

    do {
        swapped = false;
        ptr1 = head;

        while (ptr1->next != lptr) {
            if (ptr1->id > ptr1->next->id) {
                swap(ptr1->id, ptr1->next->id);
                swap(ptr1->ten, ptr1->next->ten);
                swap(ptr1->diemH10, ptr1->next->diemH10);
                swap(ptr1->diemH4, ptr1->next->diemH4);
                swap(ptr1->diemChu, ptr1->next->diemChu);
                swapped = true;
            }
            ptr1 = ptr1->next;
        }
        lptr = ptr1;
    } while (swapped);
    cout << "Sap xep danh sach theo ma so sinh vien thanh cong.\n";
}

// Hàm sắp xếp danh sách sinh viên theo tên
void sapXepTheoTen(SinhVien* &head) {
    if (head == NULL) {
        return;
    }

    bool swapped;
    SinhVien* ptr1;
    SinhVien* lptr = NULL;

    do {
        swapped = false;
        ptr1 = head;

        while (ptr1->next != lptr) {
            if (ptr1->ten > ptr1->next->ten) {
                swap(ptr1->id, ptr1->next->id);
                swap(ptr1->ten, ptr1->next->ten);
                swap(ptr1->diemH10, ptr1->next->diemH10);
                swap(ptr1->diemH4, ptr1->next->diemH4);
                swap(ptr1->diemChu, ptr1->next->diemChu);
                swapped = true;
            }
            ptr1 = ptr1->next;
        }
        lptr = ptr1;
    } while (swapped);
    cout << "Sap xep danh sach theo ten sinh vien thanh cong.\n";
}

// Hàm sắp xếp danh sách sinh viên theo điểm hệ 10
void sapXepTheoDiem(SinhVien* &head) {
    if (head == NULL) {
        return;
    }

    bool swapped;
    SinhVien* ptr1;
    SinhVien* lptr = NULL;

    do {
        swapped = false;
        ptr1 = head;

        while (ptr1->next != lptr) {
            if (ptr1->diemH10 < ptr1->next->diemH10) {
                swap(ptr1->id, ptr1->next->id);
                swap(ptr1->ten, ptr1->next->ten);
                swap(ptr1->diemH10, ptr1->next->diemH10);
                swap(ptr1->diemH4, ptr1->next->diemH4);
                swap(ptr1->diemChu, ptr1->next->diemChu);
                swapped = true;
            }
            ptr1 = ptr1->next;
        }
        lptr = ptr1;
    } while (swapped);
    cout << "Sap xep danh sach theo diem sinh vien thanh cong.\n";
}

// Hàm tính điểm trung bình của tất cả sinh viên trong danh sách
void tinhDiemTrungBinh(SinhVien* head, float &diemTBH10, float &gpaTB, string &diemChuTB) {
    if (head == NULL) {
        cout << "Danh sach sinh vien rong.\n";
        return;
    }

    float tongDiemH10 = 0;
    float tongDiemH4 = 0;
    int dem = 0;
    SinhVien* hienTai = head;
    while (hienTai != NULL) {
        tongDiemH10 += hienTai->diemH10;
        tongDiemH4 += hienTai->diemH4;
        dem++;
        hienTai = hienTai->next;
    }

    diemTBH10 = tongDiemH10 / dem;
    gpaTB = tongDiemH4 / dem;

    if (gpaTB < 1.0) {
        diemChuTB = "F";
    } else if (gpaTB >= 1.0 && gpaTB < 1.5) {
        diemChuTB = "D";
    } else if (gpaTB >= 1.5 && gpaTB < 2.0) {
        diemChuTB = "D+";
    } else if (gpaTB >= 2.0 && gpaTB < 2.5) {
        diemChuTB = "C";
    } else if (gpaTB >= 2.5 && gpaTB < 3.0) {
        diemChuTB = "C+";
    } else if (gpaTB >= 3.0 && gpaTB < 3.5) {
        diemChuTB = "B";
    } else if (gpaTB >= 3.5 && gpaTB < 4.0) {
        diemChuTB = "B+";
    } else if (gpaTB >= 4.0) {
        diemChuTB = "A";
    }
}

// Hàm in ra danh sách sinh viên
void inDanhSach(SinhVien* head) {
    if (head == NULL) {
        cout << "Danh sach sinh vien rong.\n";
        return;
    }

    SinhVien* hienTai = head;
    while (hienTai != NULL) {
        cout << "Ma so sinh vien: " << hienTai->id << endl;
        cout << "Ten sinh vien: " << hienTai->ten << endl;
        cout << "Diem sinh vien (he 10): " << hienTai->diemH10 << endl;
        cout << "Diem sinh vien (he 4): " << hienTai->diemH4 << endl;
        cout << "Diem sinh vien (he chu): " << hienTai->diemChu << endl;
        hienTai = hienTai->next;
    }
}
